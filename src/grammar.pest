WHITESPACE = _{" "| "\t"}
COMMENT = _{("#"{79}|("#" ~ (!NEWLINE ~ ANY)*)) ~ NEWLINE*}
def_file = { SOI  ~ version_stmt ~ case_sens_stmt ~ rules ~ end_design ~ EOI}

version_stmt = {"VERSION" ~ number ~ ";" ~ NEWLINE*}

case_sens_stmt = {("NAMESCASESENSITIVE"~("ON"|"OFF")~";"~ NEWLINE*)}

rules = { rule+ }

end_design = {"END" ~ "DESIGN" ~ NEWLINE*}

rule = {(design_section  | blockage_section | fill_section | comps_maskshift_section | 
		floorplan_constraints_section | groups_section | iotiming_section | nets_section |
		nondefaultrule_section | partitions_section| pin_props_section | regions_section | 
		scanchains_section | slot_section | snets_section | comps_section | via_section |
		styles_section) ~ ";"? ~ NEWLINE+ } 

design_section = { (array_name | bus_bit_chars | canplace | cannotoccupy |
              design_name | die_area | divider_char | 
              floorplan_name | gcellgrid | history |
              pin_cap_rule | pin_rule | prop_def_section |
              row_rule | tech_name | tracks_rule | units) }

cchar = {"[" | "]" | "/" | "\\" | "<" | ">"}
char = { ASCII_ALPHANUMERIC | "_" | "."| "-" |cchar}

tstring = @{ char+ }
qstring = @{ "\"" ~ char+ ~ "\""}
qqstring = !{ "\"" ~ char+ ~ "\""}
sstring = { "\"" ~ cchar+ ~ "\""}
orient = {"N" | "W" | "S" | "E" | "FN" | "FW" | "FS" | "FE"}


number = @{ (ASCII_DIGIT | "." | "-")+ }
design_name = {"DESIGN" ~ tstring }
tech_name = {"TECHNOLOGY" ~ tstring}
history = {"HISTORY"}
array_name = {"ARRAY" ~ tstring}
units = {"UNITS"~"DISTANCE" ~ "MICRONS" ~ number}
divider_char = {"DIVIDERCHAR" ~ sstring }
bus_bit_chars = {"BUSBITCHARS" ~ sstring }
canplace = {"CANPLACE" ~ tstring ~ number{2} ~ orient ~ "DO" ~ number ~ "BY" ~ number ~ "STEP" ~ number{2}}
cannotoccupy = {"CANNOTOCCUPY" ~ tstring ~ number{2} ~ orient ~ "DO" ~ number ~ "BY" ~ number ~ "STEP" ~ number{2}}
floorplan_name = {"FLOORPLAN" ~ tstring}
gcellgrid = {"GCELLGRID" ~ track_type ~ number ~ "DO" ~ number ~ "STEP" ~ number}


die_area = {"DIEAREA" ~ (pt~NEWLINE?)+ }
	pt = {("(" ~ number ~ number ~ ")")|("(" ~ "*" ~ number ~ ")")|
			("(" ~ number ~ "*" ~ ")")|("(" ~ "*" ~ "*" ~ ")")}

pin_cap_rule = {start_def_cap ~ pin_caps ~ end_def_cap}
	start_def_cap = {"DEFAULTCAP" ~ number}
	pin_caps = {(pin_cap)+}
		pin_cap = {"MINPINS" ~ number ~ "WIRECAP" ~ number ~ ";"}
	end_def_cap = {"END" ~ "DEFAULTCAP"}

pin_rule = {start_pins ~ pins ~ end_pins}
	start_pins = {"PINS" ~ number ~ ";" ~ NEWLINE}
	end_pins = {"END" ~ "PINS"}
	pins = {(pin)+}
		pin = {"-" ~ tstring ~ "+" ~ "NET" ~ tstring ~ NEWLINE* 
				~ pin_member* ~ ";" ~ NEWLINE*}
			pin_member = {"+" ~ ( "SPECIAL" | extension_stmt | ("DIRECTION" ~ tstring)|
						  ("NETEXPR" ~ qqstring)| ("SUPPLYSENSITIVITY" ~ tstring)|
						  ("GROUNDSENSITIVITY" ~ tstring)| ("USE" ~ use_type) | "PORT" |
						  ("LAYER" ~ tstring ~ pin_layer_mask_opt? ~ pin_layer_spacing_opt? ~ pt{2})|
						  ("POLYGON" ~ tstring ~ pin_poly_mask_opt? ~ pin_poly_spacing_opt? ~ (pt ~ NEWLINE?)+)|
						  ("VIA" ~ tstring ~ pin_via_mask_opt? ~ pt)|
						  (placement_status ~ pt ~ orient)|
						  ("ANTENNAPINPARTIALMETALAREA" ~ number ~ pin_layer_opt?)|
						  ("ANTENNAPINPARTIALMETALSIDEAREA" ~ number ~ pin_layer_opt?)|
						  ("ANTENNAPINGATEAREA" ~ number ~ pin_layer_opt?)|
						  ("ANTENNAPINDIFFAREA" ~ number ~ pin_layer_opt?)|
						  ("ANTENNAPINMAXAREACAR" ~ number ~ "LAYER" ~ tstring)|
						  ("ANTENNAPINMAXSIDEAREACAR" ~ number ~ "LAYER" ~ tstring)|
						  ("ANTENNAPINPARTIALCUTAREA" ~ number ~ pin_layer_opt?)|
						  ("ANTENNAPINMAXCUTCAR" ~ number ~ "LAYER" ~ tstring)|
						  ("ANTENNAMODEL" ~ pin_oxide) )  ~ NEWLINE*}
				use_type = {"SIGNAL" | "POWER" | "GROUND" | "CLOCK" | "TIEOFF" | 
							"ANALOG" | "SCAN" | "RESET"}
				pin_poly_spacing_opt = {("SPACING" ~ number)|("DESIGNRULEWIDTH" ~ number)}
				pin_via_mask_opt = {"MASK" ~ number}
				placement_status = {"FIXED"|"COVER"|"PLACED"}
				pin_layer_opt = {"LAYER" ~ tstring}
				pin_layer_mask_opt = {"MASK" ~ number}
				pin_poly_mask_opt = {"MASK" ~ number}
				pin_oxide = {"OXIDE1" | "OXIDE2" | "OXIDE3" | "OXIDE4"}
				extension_stmt = {"+" ~ "BEGINEXT"}
				pin_layer_spacing_opt = {("SPACING"~number)|("DESIGNRULEWIDTH"~number)}


prop_def_section = {"PROPERTYDEFINITIONS" ~ NEWLINE ~ (property_def)* 
					~ "END" ~ "PROPERTYDEFINITIONS"}
	property_def = {(k_design | k_net | k_snet | k_region |
				    k_group | k_component | k_row | k_componentpin | 
				    k_nondefaultrule) ~ ";" ~ NEWLINE}
		k_design = {"DESIGN" ~ tstring ~ property_type_and_val}
		k_net    = {"NET" ~ tstring ~ property_type_and_val}
		k_snet   = {"SPECIALNET" ~ tstring ~ property_type_and_val}
		k_region = {"REGION" ~ tstring ~ property_type_and_val}
		k_group  = {"GROUP" ~ tstring ~ property_type_and_val}
		k_component = {"COMPONENT" ~ tstring ~ property_type_and_val}
		k_row  	= {"ROW" ~ tstring ~ property_type_and_val}
		k_componentpin = {"COMPONENTPIN" ~ tstring ~ property_type_and_val}
		k_nondefaultrule = {"NONDEFAULTRULE" ~ tstring ~ property_type_and_val}
			property_type_and_val = {("INTEGER" ~ opt_range? ~ opt_num_val?) |
						 ("REAL" ~ opt_range? ~ opt_num_val?) |
						 ("STRING" ~ qstring*) |
						 ("NAMEMAPSTRING" ~ tstring)}
				opt_num_val = {number}
				opt_range = {"RANGE" ~ number{2}}

row_rule = {"ROW" ~ tstring{2} ~ number{2} ~ orient ~ row_do_option ~ (NEWLINE~row_option)* }
	row_do_option = {"DO" ~ number ~ "BY" ~ number ~ row_step_option}
		row_step_option = {"STEP" ~ number{2}}
	row_option = {"+" ~ "PROPERTY" ~ tstring ~ row_prop}
		row_prop  = @{ number | qstring | tstring }

tracks_rule = { track_start ~ number ~ "DO" ~ number ~ "STEP" ~ number ~ track_opts}
	track_start = {"TRACKS" ~ track_type}
		track_type = {"X" | "Y"}
	track_opts = {track_mask_statement? ~ track_layer_statement?}
		track_mask_statement = {"MASK" ~ number ~ same_mask?}
			same_mask = {"SAMEMASK"}
		track_layer_statement = {"LAYER" ~ (tstring)+}

blockage_section = {blockage_start ~ blockage_rule* ~ blockage_end}
	blockage_start = {"BLOCKAGES" ~ number ~ ";" ~ NEWLINE}
	blockage_end = {"END" ~ "BLOCKAGES"}
	blockage_rule = {"-" ~ (("LAYER" ~ tstring ~ layer_blockage_rule*)|
					  ("PLACEMENT" ~ placement_comp_rule*)) ~ NEWLINE 
					  ~ blockage_member* ~ ";" ~ NEWLINE*}
		layer_blockage_rule = {("+" ~ "SPACING" ~ number)| ("+" ~ "DESIGNRULEWIDTH" ~ number)|
							   mask_blockage_rule | comp_blockage_rule}
			mask_blockage_rule = {"+" ~ "MASK" ~ number}
			comp_blockage_rule = {"+" ~ (("COMPONENT" ~ tstring)| "SLOTS" | "FILLS" | "PUSHDOWN" | "EXCEPTPGNET")}
		placement_comp_rule = {"+" ~ (("COMPONENT" ~ tstring)| "PUSHDOWN" | "SOFT" | ("PARTIAL" ~ number))}
		blockage_member = {(("RECT" ~ pt{2})| ("POLYGON" ~ pt+)) ~ NEWLINE*}

fill_section = {fill_start ~ fill_def* ~ fill_end}
	fill_start = {"FILLS" ~ number ~ ";" ~ NEWLINE}
	fill_end = {"END" ~ "FILLS"}
	fill_def = {"-" ~ (("LAYER" ~ tstring ~ opt_mask_opc_l* ~ NEWLINE* ~ geom_fill*)|
				("VIA" ~ tstring ~ opt_mask_opc_l* ~ NEWLINE* ~ geom_fill_via*)) ~ ";" ~ NEWLINE*}
		opt_mask_opc_l = {fill_layer_opc | fill_mask}
			fill_layer_opc = {"+" ~ "OPC"}
			fill_mask = {"+" ~ "MASK" ~ number}
		geom_fill = {(("RECT" ~ pt{2})|("POLYGON"~ pt+)) ~ NEWLINE?}
		geom_fill_via = {pt ~ NEWLINE?}

comps_maskshift_section = {"COMPONENTMASKSHIFT" ~ layer_statement ~ (";" ~ NEWLINE)}
	layer_statement = {maskLayer+}
		maskLayer = {tstring}

floorplan_constraints_section = {fp_start ~ fp_stmts ~ fp_end}
	fp_start = {"FPC" ~ number ~ ";"}
	fp_stmts = {fp_stmt+}
		fp_stmt = {"-" ~ tstring ~ h_or_v}
			h_or_v = {"HORIZONTAL" | "VERTICAL"}
	fp_end = {"END" ~ "FPC"}

groups_section = {groups_start ~ group_rule* ~ groups_end}
	groups_start = {"GROUPS" ~ number ~ ";" ~ NEWLINE}
	groups_end = {"END" ~ "GROUPS"}
	group_rule = {"-" ~ tstring ~ group_members ~ NEWLINE 
				  ~ group_options}
		group_members = {tstring+}
		group_options = {(group_option+) ~ ";" ~ NEWLINE}
			group_option = {"+" ~ (("SOFT" ~ group_soft_options)|
							("PROPERTY" ~ group_prop_list)|
							("REGION" ~ group_region)|
							(extension_stmt)) ~ NEWLINE?}
				group_soft_options = {group_soft_option+}
					group_soft_option = {("MAXX" ~ number)|
										 ("MAXY" ~ number)|
										 ("MAXHALFPERIMETER" ~ number)}
				group_prop_list = {group_prop+}
					group_prop = {tstring ~ (number|qstring|tstring)}
				group_region = {pt{2} | tstring}	

iotiming_section = {iotiming_start ~ iotiming_rules? ~ iotiming_end}
	iotiming_start = {"IOTIMINGS" ~ number ~ ";"}
	iotiming_end  = {"END" ~ "IOTIMINGS"}
	iotiming_rules = {iotiming_rule+}
		iotiming_rule = {start_iotiming ~ iotiming_members ~ ";"}
			start_iotiming = {"-" ~ "(" ~ tstring{2} ~ ")"}
			iotiming_members = {iotiming_member+}
				iotiming_member = {("+" ~ risefall ~ "VARIABLE" ~ number{2})|
								   ("+" ~ "CAPACITANCE" ~ number)|
								   ("+" ~ "DRIVERCELL" ~ tstring ~ iotiming_drivecell_opt)|
								   (extension_stmt)}
					risefall = {"RISE"|"FALL"}
					iotiming_drivecell_opt = {iotiming_frompin? ~ "TOPIN" ~ tstring ~ iotiming_parallel?}
						iotiming_frompin = {"FROMPIN" ~ tstring}
						iotiming_parallel = {"PARALLEL" ~ number}

nets_section = {start_nets ~ one_net* ~ end_nets}
	start_nets = {"NETS" ~ number ~ ";" ~ NEWLINE}
	end_nets = {"END" ~ "NETS"}
	one_net = {"-" ~ net_name ~ NEWLINE? ~ net_member* ~ ";" ~ NEWLINE*}
		net_name = {(tstring ~ net_connection*)|
					("MUSTJOIN" ~ "(" ~ tstring{2} ~ ")")}
			net_connection = {("(" ~ tstring{2} ~ conn_opt? ~ ")")|
								("(" ~ "*" ~ tstring ~ conn_opt? ~ ")")}
					conn_opt = {extension_stmt| ("+" ~ "SYNTHESIZED")}
		net_member = {"+"? ~ net_option ~ NEWLINE?}
			net_option = {("FIXEDBUMP")|(net_type ~ NEWLINE* ~ path*) | ("SOURCE" ~ netsource_type)|
					  	  ("FREQUENCY" ~ number)| ("ORIGINAL" ~ tstring)|
					  	  ("PATTERN" ~ pattern_type)| ("WEIGHT" ~ number)|("XTALK" ~ number)|
					  	  ("ESTCAP" ~ number)|("USE" ~ use_type)|("STYLE" ~ number)|
					  	  ("NONDEFAULTRULE" ~ tstring)|("SHIELDNET" ~ tstring)|
					  	  ("NOSHIELD" ~ path*)|
					  	  ("SUBNET" ~ tstring ~ comp_name+ ~ NEWLINE ~ subnet_option+)|
					  	  ("PROPERTY" ~ net_prop_list)|(extension_stmt)|
					  	  ("VPIN" ~ tstring ~ ("LAYER" ~ tstring)? ~ pt{2} ~ vpin_options?)}
			net_type = {"FIXED" | "COVER" | "ROUTED"}
			netsource_type = {"NETLIST" | "DIST" | "USER" | "TIMING" | "TEST"}
			pattern_type = {"BALANCED" | "STEINER" | "TRUNK" | "WIREDLOGIC"}
			comp_name = {"(" ~ tstring{2} ~ subnet_opt_syn? ~ ")"}
				subnet_opt_syn = {"+" ~ "SYNTHESIZED"}
			subnet_option = {(subnet_type ~ path*)|("NONDEFAULTRULE" ~ tstring) ~ NEWLINE*}
				subnet_type = {"FIXED"|"COVER"|"ROUTED"|"NOSHIELD"}
			vpin_options = {vpin_status ~ pt ~ orient}
				vpin_status = {"PLACED"|"FIXED"|"COVER"}
			net_prop_list = {net_prop+}
				net_prop = {tstring ~ (number|qstring|tstring)}
			path = {"NEW"? ~ tstring ~ opt_taper_style* ~ pt* ~ path_item* ~ NEWLINE*}
				opt_taper_style = {opt_style|opt_taper}
					opt_taper = {("TAPERRULE" ~ tstring)|"TAPER"}
					opt_style = {"STYLE" ~ number}
				path_pt = {pt|("(" ~ ((number{3})|("*" ~ number{2})|
									  (number ~ "*" ~ number)|
									  ("*"{2} ~ number)) ~ ")")}
				path_item = {(tstring ~ orient ~ "DO" ~ number ~ "BY" ~ number ~ "STEP" ~ number{2})|
							 (tstring ~ "DO" ~ number ~ "BY" ~ number ~ "STEP" ~ number{2})|
							 (tstring ~ orient)| 
							 ("MASK"~number~"RECT"~"("~number{4}~")" ~ pt)|
							 ("MASK"~number~tstring~orient~"DO"~number~"BY"~number~"STEP"~number{2})|
							 ("MASK"~number~tstring~"DO"~number~"BY"~number~"STEP"~number{2})|
							 ("MASK" ~ number ~ tstring ~ orient)|
							 ("MASK" ~ number ~ tstring)|
							 ("MASK" ~ number ~ pt)|
							 ("VIRTUAL" ~ pt)| 
							 ("RECT" ~"("~number{4}~")" ~ pt)|
							 tstring | path_pt}

nondefaultrule_section = {nondefault_start ~ nondefault_def* ~ nondefault_end}
	nondefault_start = {"NONDEFAULTRULES" ~ number ~ ";" ~ NEWLINE}
	nondefault_end = {"END" ~ "NONDEFAULTRULES"}
	nondefault_def = {"-" ~ tstring ~ NEWLINE ~ nondefault_option* ~ ";" ~ NEWLINE}
		nondefault_option = {"+" ~ (("HARDSPACING")|
							 ("LAYER" ~ tstring ~ NEWLINE ~ "WIDTH" ~ number
							 ~ NEWLINE ~ nondefault_layer_options)|
							 ("VIARULE" ~ tstring)|
							 ("VIA" ~ tstring)|
							 ("MINCUTS" ~ tstring ~ number)|
							 (nondefault_prop_opt)) ~ NEWLINE?}
			nondefault_layer_options = {(nondefault_layer_option)+}
				nondefault_layer_option = {(("DIAGWIDTH" ~ number)|
										   ("SPACING" ~ number)|
										   ("WIREEXT" ~ number)) ~ NEWLINE}
			nondefault_prop_opt = {"PROPERTY" ~ nondefault_prop ~ NEWLINE?}
				nondefault_prop = {tstring ~ (number|tstring|qstring)}
	

regions_section = {regions_start ~ region_stmt* ~ regions_end}
	regions_start = {"REGIONS" ~ number ~ ";" ~ NEWLINE}
	regions_end = {"END" ~ "REGIONS"}
	region_stmt = {"-" ~ tstring ~ region_list ~ NEWLINE ~ region_option* ~ ";" ~ NEWLINE}
		region_list = {(pt{2})*}
		region_option = {"+" ~ (("TYPE" ~ region_type)|("PROPERTY" ~ region_prop*)) ~ NEWLINE?}
			region_prop = {tstring ~ (number|tstring|qstring)}
			region_type = {"FENCE"|"GUIDE"}

comps_section = {start_comps ~ comp* ~ end_comps}
	start_comps = {"COMPONENTS" ~ number ~ ";" ~ NEWLINE}
	end_comps = {"END" ~ "COMPONENTS"}
	comp = {"-" ~ tstring{2} ~ (NEWLINE ~ comp_net_list ~ comp_option*)* ~ ";" ~ NEWLINE}
		comp_net_list = {("*"|tstring)*}
		comp_option = {"+" ~ (comp_generate | comp_source | comp_type | weight | 
							  maskShift | comp_foreign | comp_region | comp_eeq | 
							  comp_halo | comp_routehalo | comp_property | 
							  comp_extension_stmt) ~ NEWLINE?}
        	comp_generate = {"GENERATE" ~ tstring ~ tstring?}
        	comp_source = {"SOURCE" ~ source_type}
        		source_type = {"NETLIST"|"DIST"|"USER"|"TIMING"}
        	comp_type = {(placement_status ~ pt ~ orient)|"UNPLACED"}
        	weight = {"WEIGHT" ~ number}
        	maskShift = {"MASKSHIFT" ~ tstring}
        	comp_foreign = {"FOREIGN" ~ tstring ~ pt ~ orient}
        	comp_region = {"REGION" ~ (tstring|comp_pnt_list)}
        		comp_pnt_list = {(pt{2})*}
        	comp_eeq = {"EEQMASTER" ~ tstring}
        	comp_halo = {"HALO" ~ halo_soft? ~ number{4}}
        		halo_soft = {"SOFT"}
        	comp_routehalo = {"ROUTEHALO" ~ number ~ tstring{2}}
        	comp_property = {"PROPERTY" ~ comp_prop*}
        		comp_prop = {tstring ~ (number|qstring|tstring)}
        	comp_extension_stmt = {extension_stmt}

pin_props_section = {start_pin_props ~ pin_prop_rule* ~ end_pin_props}
	start_pin_props = {"PINPROPERTIES" ~ number ~ ";" ~ NEWLINE}
	end_pin_props = {"END" ~ "PINPROPERTIES"}
	pin_prop_rule = {"-" ~ tstring{2} ~ NEWLINE ~ pin_prop* ~ ";" ~ NEWLINE}
		pin_prop = {"+" ~ "PROPERTY" ~ pin_prop_name_value ~ NEWLINE?}
			pin_prop_name_value = {tstring ~ (number|qstring|tstring)}

partitions_section = {partitions_start ~ partition_rules? ~ partitions_end}
	partitions_start = {"PARTITIONS" ~ number ~ ";"}
	partitions_end = {"END" ~ "PARTITIONS"}
	partition_rules = {partition_rule+}
		partition_rule = {start_partition ~ partition_members? ~ ";"}
			start_partition = {"-" ~ tstring ~ turnoff?}
				turnoff = {"TURNOFF" ~ turnoff_setup? ~ turnoff_hold?}
					turnoff_setup = {"SETUPRISE"|"SETUPFALL"}
					turnoff_hold  = {"HOLDRISE"|"HOLDFALL"}
		partition_members = {partition_member+}
			partition_member = {"+" ~ (("FROMCLOCKPIN" ~ tstring{2} ~ risefall 
										~ minmaxpins)|
										("FROMCOMPPIN" ~ tstring{2} 
										~ risefallminmax2_list)|
										("FROMIOPIN" ~ tstring ~ risefallminmax1_list)|
										("TOCLOCKPIN" ~ tstring{2} ~ risefall ~
										minmaxpins)|
										("TOCOMPPIN" ~ tstring{2} ~ risefallminmax2_list)|
										("TOIOPIN" ~ tstring ~ risefallminmax1_list)|
										(extension_stmt))}
				minmaxpins = {min_or_max_list ~ "PINS" ~ pin_list?}
					pin_list = {tstring+}
					min_or_max_list = {min_or_max_member+}
						min_or_max_member = {("MIN" ~ number{2})|("MAX" ~ number{2})} 
				risefallminmax1_list = {risefallminmax1+}
					risefallminmax1 = {("RISEMIN"|"FALLMIN"|"RISEMAX"|"FALLMAX") ~ number}
				risefallminmax2_list = {risefallminmax2+}
					risefallminmax2 = {("RISEMIN"|"FALLMIN"|"RISEMAX"|"FALLMAX") ~ number{2}}

scanchains_section = {start_scanchains ~ scanchain_rule* ~ end_scanchains}
	start_scanchains = {"SCANCHAINS" ~ number ~ ";" ~ NEWLINE}
	end_scanchains = {"END" ~ "SCANCHAINS"}
	scanchain_rule = {"-" ~ tstring ~ NEWLINE ~ scanchain_rule_member* ~ ";" ~ NEWLINE}
		scanchain_rule_member = {"+" ~ (("PARTITION" ~ tstring ~ partition_maxbits)|
										("COMMONSCANPINS" ~ opt_common_pins?)|
										("START" ~ tstring ~ opt_pin)|
										("STOP" ~ tstring ~ opt_pin)|
										("ORDERED" ~ NEWLINE ~ ordered_inst_list)|
										("FLOATING" ~ NEWLINE ~ floating_inst_list)|
										(extension_stmt)) ~ NEWLINE?}
			opt_pin = {tstring}
			opt_common_pins = {("(" ~ tstring{2} ~ ")"){2}|
							   (("(" ~ tstring{2} ~ ")"))}
			floating_inst_list = {one_floating_inst*}
				one_floating_inst = {tstring? ~ (floating_pin+) ~ NEWLINE?}
					floating_pin = {("(" ~ tstring{2} ~ ")"){3}|
									 (("(" ~ tstring{2} ~ ")"){2})|
									 (("(" ~ tstring{2} ~ ")"))}
			ordered_inst_list = {one_ordered_inst*}
				one_ordered_inst = {one_floating_inst}
			partition_maxbits = {"MAXBITS" ~ number}

slot_section = {start_slot ~ slot_rule* ~ end_slot}
	start_slot = {"SLOTS" ~ number ~ ";" ~ NEWLINE}
	end_slot = {"END" ~ "SLOTS"}
	slot_rule = {"-" ~ "LAYER" ~ tstring ~ NEWLINE
				 ~ slot_rule_members}
		slot_rule_members = {(slot_rule_member+) ~ ";" ~ NEWLINE}
			slot_rule_member = {(("RECT" ~ pt{2})|("POLYGON" ~ pt+)) ~ NEWLINE?}

snets_section = {start_snets ~ snets_rule* ~ end_snets}
	start_snets = {"SPECIALNETS" ~ number ~ ";" ~ NEWLINE}
	end_snets = {"END" ~ "SPECIALNETS"}
	snets_rule = {"-" ~ net_name ~ NEWLINE ~ snets_rule_member* ~ ";" ~ NEWLINE*}
		snets_rule_member = {"+"? ~ (snet_width|snet_voltage|
							snet_spacing|snet_other_option) ~ NEWLINE*}
			snet_width = {"WIDTH" ~ tstring ~ number}
			snet_voltage = {"VOLTAGE" ~ tstring}
			snet_spacing = {"SPACING" ~ tstring ~ number ~ opt_snet_range}
				opt_snet_range = {"RANGE" ~ number{2}}
			snet_other_option = {("FIXEDBUMP")| (net_type ~ spath*)|
								 ("SHIELD" ~ tstring ~ shield_layer)|("SHAPE" ~ shape_type)|
								 ("MASK" ~ number)|("POLYGON" ~ tstring ~ pt*)|
								 ("RECT" ~ tstring ~ pt{2})|
								 ("VIA" ~ tstring ~ orient? ~ pt*)|
								 ("SOURCE" ~ source_type)| ("FREQUENCY" ~ number)|
								 ("ORIGINAL" ~ tstring)|("PATTERN" ~ pattern_type)|
								 ("WEIGHT" ~ number)|("ESTCAP" ~ number)|
								 ("USE" ~ use_type)|("STYLE" ~ number)|
								 ("PROPERTY" ~ snet_prop_list)|extension_stmt}
				spath = {"NEW"? ~ tstring ~ number ~ opt_shape_style* ~ path_pt+ ~ path_item* ~ NEWLINE*}
						opt_shape_style = {"+" ~ (("SHAPE" ~ shape_type) | ("STYLE" ~ number))}
				shape_type = {"RING"|"STRIPE"|"FOLLOWPIN"|"IOWIRE"|"COREWIRE"|
							  "BLOCKWIRE"|"FILLWIREOPC"|"FILLWIRE"|"DRCFILL"|
							  "BLOCKAGEWIRE"|"PADRING"|"BLOCKRING"}
				snet_prop_list = {snet_prop*}
					snet_prop = {tstring ~ (number|qstring|tstring)}
				shield_layer = {spath*}

via_section = {start_via ~ via_rule* ~ end_via}
	start_via = {"VIAS" ~ number ~ ";" ~ NEWLINE}
	end_via = {"END" ~ "VIAS"}
	via_rule = {"-" ~ tstring ~ NEWLINE ~ via_member* ~ ";" ~ NEWLINE*}
		via_member = {"+" ~ (("RECT" ~ tstring ~ mask? ~ pt{2})|("POLYGON" ~ tstring ~ mask? ~ pt+)|
							 ("PATTERNNAME" ~ tstring)|
							 ("VIARULE" ~ tstring)|("CUTSIZE" ~ number{2})|
							 ("LAYERS" ~ tstring{3})|("CUTSPACING" ~ number{2})|
							 ("ENCLOSURE" ~ number{4})|
							 layer_viarule_opts|
							 extension_stmt) ~ NEWLINE?}
			mask = {"+" ~ "MASK" ~ number}
			layer_viarule_opts = {("ROWCOL" ~ number{2})|("ORIGIN" ~ number{2})|
								  ("OFFSET" ~ number{4})|("PATTERN" ~ tstring)}

styles_section = {start_style ~ style_rule* ~ end_style}
	start_style = {"STYLES" ~ number ~ ";" ~ NEWLINE}
	end_style = {"END" ~ "STYLES"}
	style_rule = {"-" ~ "STYLE" ~ number ~ pt* ~ ";" ~ NEWLINE*}